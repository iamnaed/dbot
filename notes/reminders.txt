[1] Add use_sim_time in the generate_move_group_launch() function in launches.py to support simulation in move_group node of moveit2.
    See dbot/notes/launches.movegroup.py
    [/opt/ros/humble/lib/python3.10/site-packages/moveit_configs_utils/launches.py]

[2] When using moveit_task_constructor, use the humble branch in github
    https://github.com/ros-planning/moveit_task_constructor.git -b humble

[3] Install chomp planner
    sudo apt install ros-humble-moveit-planners-chomp

[4] Install MoveIt Visual Tools
    sudo apt install ros-humble-moveit-visual-tools

[5] odrivetool generate-code -t ~/odrive_header_template.h.in -o ~/odrive_endpoints.h

[6] Install MoveIt Servo
    sudo apt install ros-humble-moveit-servo

[7] launches.move_group.py
    /opt/ros/humble/lib/python3.10/site-packages/moveit_configs_utils

[8] To properly install IKFast Kinematic plugin, install python-is-python3. when there is an error, generating 
    the IKFast solver plugin will fail
    
    sudo apt install python-is-python3

[9] Install Gazeebo
    sudo apt install ros-humble-gazebo-ros-pkgs

[10] Install ROS2 Controllers
    sudo apt install ros-humble-ros2-control ros-humble-ros2-controllers ros-humble-gazebo-ros2-control

[11] Install Joint State Publisher
    sudo apt install ros-humble-joint-state-publisher ros-humble-joint-state-publisher-gui

[12] Install rqt joint trajectory controllers
    sudo apt install ros-humble-rqt ros-humble-rqt-common-plugins

[13] Example PILZ launche
    https://github.com/moveit/moveit2_tutorials/blob/main/doc/how_to_guides/pilz_industrial_motion_planner/launch/pilz_moveit.launch.py